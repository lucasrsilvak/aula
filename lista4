#include <stdio.h>
#include <math.h>

int fatorial(int n) {
	if (n == 0) return (1);
	return (n*fatorial(n+1));
}

int mdc(int a, int b) {
	
}

int mdc3(int a, int b, int c)  {
	
}

int fib(int x) {
	if (x < 2) return 1;
	return (fib(x-1) + fib(x-2));
}

int primo(int x, int y)  {
	if (x%y==0 && y>1) return (0);
	if (y==1) 	   return (1);
	return primo(x, y-1);
}

// f)
int decrescente(int x) {
	printf("%d ", x);
	if (x > 0) 	   return decrescente(x-1);
	else printf("\n"); return 1;
}

// g)

int res(int x, int y) {
	if (y > x) return x;
	return (res(x-y, y));
}

// h)

int form(int x) {
	
}

// l)

float raiz(float x, float y) {
	// numero do qual quero descobrir la raizita
	// z = chute
	float z = y*y;
	if(z >= x*0.999 && z <= x*1.001) return y;
	if(z > x) return raiz(x, y*0.5);
	else 	  return raiz(x, y*1.5);
}

// m)

int dig(int x, int y) {
	
}

// n)

int expo2(int x, int y, int z) {
	if (y == 0) return 1;
	else if (y > 0) {
		z = z*x;
		y = y-1;
		return expo2(x, y, z);
	}
	return z;
}

int expo(int x, int y) {
	return expo2(x, y, x);
}

// o)
int crescente(int x, int y) {
	printf("%d ",y);
	if (x > y) 	   return crescente(x, y+1);
	else printf("\n"); return 1;
}

int main()
{
	crescente(5, 0);
	printf("resto: %d\n", res(699, 300));
	printf("raiz %.3f\n", raiz(2,1.5));
	printf("fib %d\n", fib(13));
	printf("exp: %d", expo(3,3));
}
